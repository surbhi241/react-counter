{"version":3,"sources":["Icons.js","counter/Counter.js","App.js","reportWebVitals.js","index.js"],"names":["AddIcon","props","color","width","height","viewBox","fill","fillRule","d","transform","class","SubtractIcon","Counter","maxCount","initial","useState","initialCount","setInitialCount","isError","setError","handleClick","type","className","onClick","disabled","value","onChange","event","Number","target","name","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAaA,EAAU,SAACC,GACpB,IAAQC,EAAUD,EAAVC,MACX,OACG,qBAAKC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAApC,SACI,mBAAGC,KAAK,OAAOC,SAAS,UAAxB,SACI,4BACI,4BACI,4BACI,8BACI,4BACI,sBAAMC,EAAE,wBAAwBC,UAAU,0IAE9C,oBAAGF,SAAS,UAAZ,UACI,mBAAGD,KAAMJ,EAAOQ,MAAM,WAAtB,SACI,sBAAMF,EAAE,oJAAoJC,UAAU,wKAE1K,sBAAMD,EAAE,gBAAgBC,UAAU,2IAEtC,sBAAMD,EAAE,gBAAgBC,UAAU,sJAUjDE,EAAe,SAACV,GACzB,IAAQC,EAAUD,EAAVC,MACR,OACI,qBAAKC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAApC,SACI,mBAAGC,KAAK,OAAOC,SAAS,UAAxB,SACI,4BACI,4BACI,4BACI,4BACI,4BACI,8BACI,4BACI,sBAAMC,EAAE,gCAAgCC,UAAU,4IAEtD,mBAAGH,KAAMJ,EAAOK,SAAS,UAAUG,MAAM,WAAzC,SACI,4BACI,sBAAMF,EAAE,4DAA4DC,UAAU,4KAGtF,sBAAMD,EAAE,oBAAoBC,UAAU,4JCG/DG,EAhDC,SAAC,GAAoC,IAAD,IAAlCC,gBAAkC,MAAvB,IAAuB,MAAjBC,eAAiB,MAAP,EAAO,EAChD,EAAwCC,mBAASD,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAgBC,EAAhB,KAGMC,EAAc,SAACC,GACnB,GAAY,QAATA,GAAkBL,EAAeH,EAEhCI,EADiBD,EAAe,QAE7B,GAAY,aAATK,GAAuBL,EAAe,EAAI,CAElDC,EADiBD,EAAe,KAiBpC,OACI,mCACE,sBAAKM,UAAU,sBAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,wBAAQA,UAAU,kBAAkBC,QAAS,kBAAMH,EAAY,aAAaI,SAAUR,GAAgB,EAAtG,SACI,cAAC,EAAD,MAEJ,uBAAOM,UAAU,cAAcD,KAAK,OAAOI,MAAOT,EAAcU,SAlBzD,SAACC,GACpB,IAAMF,EAAQG,OAAOD,EAAME,OAAOJ,OAEtB,iBADCE,EAAME,OAAOC,OACIF,OAAOH,IAAYE,EAAME,OAAOJ,MAAQZ,IACpEI,EAAgBQ,GAChBN,GAAS,IACLQ,EAAME,OAAOJ,MAAQZ,GACzBM,GAAS,IAWyFW,KAAK,eAAeC,YAAY,8BACxH,wBAAQT,UAAU,iBAAiBC,QAAS,kBAAMH,EAAY,QAAQI,SAAUR,GAAgBH,EAAhG,SACI,cAAC,EAAD,SAGPG,GAAgBH,GAAYK,EAC7B,mBAAGI,UAAU,YAAb,wGAEO,WCjCNU,MARf,WACE,OACE,qBAAKV,UAAU,MAAf,SACE,cAAC,EAAD,OCMSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9a74d32c.chunk.js","sourcesContent":["export const AddIcon = (props) => {\r\n    const { color } = props;\r\n return(\r\n    <svg width=\"17\" height=\"17\" viewBox=\"0 0 17 17\">\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n            <g>\r\n                <g>\r\n                    <g>\r\n                        <g>\r\n                            <g>\r\n                                <path d=\"M0 0L16 0 16 16 0 16z\" transform=\"translate(-1165.000000, -477.000000) translate(1152.000000, 466.000000) translate(5.000000, 5.000000) translate(8.666667, 6.666667)\"/>\r\n                            </g>\r\n                            <g fillRule=\"nonzero\">\r\n                                <g fill={color} class=\"svgIcons\">\r\n                                    <path d=\"M9.667 5.667L5.667 5.667 5.667 9.667 4.333 9.667 4.333 5.667 0.333 5.667 0.333 4.333 4.333 4.333 4.333 0.333 5.667 0.333 5.667 4.333 9.667 4.333z\" transform=\"translate(-1165.000000, -477.000000) translate(1152.000000, 466.000000) translate(5.000000, 5.000000) translate(8.666667, 6.666667) translate(3.000000, 3.000000)\"/>\r\n                                </g>\r\n                                <path d=\"M0 0H16V16H0z\" transform=\"translate(-1165.000000, -477.000000) translate(1152.000000, 466.000000) translate(5.000000, 5.000000) translate(8.666667, 6.666667)\"/>\r\n                            </g>\r\n                            <path d=\"M0 0H16V16H0z\" transform=\"translate(-1165.000000, -477.000000) translate(1152.000000, 466.000000) translate(5.000000, 5.000000) translate(8.666667, 6.666667)\"/>\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n            </g>\r\n        </g>\r\n    </svg>\r\n );\r\n}\r\n\r\nexport const SubtractIcon = (props) => {\r\n    const { color } = props;\r\n    return(\r\n        <svg width=\"16\" height=\"17\" viewBox=\"0 0 16 17\">\r\n            <g fill=\"none\" fillRule=\"evenodd\">\r\n                <g>\r\n                    <g>\r\n                        <g>\r\n                            <g>\r\n                                <g>\r\n                                    <g>\r\n                                        <g>\r\n                                            <path d=\"M0 0L16 0 16 15.974 0 15.974z\" transform=\"translate(-346.000000, -932.000000) translate(32.000000, 635.000000) translate(0.000000, 30.000000) translate(314.000000, 268.000000)\"/>\r\n                                        </g>\r\n                                        <g fill={color} fillRule=\"nonzero\" class=\"svgIcons\">\r\n                                            <g>\r\n                                                <path d=\"M9.333 1.331L5.333 1.331 4 1.331 0 1.331 0 0 4 0 9.333 0z\" transform=\"translate(-346.000000, -932.000000) translate(32.000000, 635.000000) translate(0.000000, 30.000000) translate(314.000000, 268.000000) translate(3.333333, 7.321252)\"/>\r\n                                            </g>\r\n                                        </g>\r\n                                        <path d=\"M0 0H16V15.974H0z\" transform=\"translate(-346.000000, -932.000000) translate(32.000000, 635.000000) translate(0.000000, 30.000000) translate(314.000000, 268.000000)\"/>\r\n                                    </g>\r\n                                </g>\r\n                            </g>\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { AddIcon,  SubtractIcon } from \"../Icons\";\r\nconst Counter = ({maxCount = 1000, initial = 1}) => {\r\n    const [initialCount, setInitialCount] = useState(initial);\r\n    const [isError, setError] = useState(false);\r\n\r\n    // this method will increase or decrease count.\r\n    const handleClick = (type) => {  \r\n      if(type === \"add\" && initialCount < maxCount){\r\n          const newCount = initialCount + 1;\r\n          setInitialCount(newCount);\r\n      } else if(type === \"subtract\" && initialCount > 1 ) {\r\n        const newCount = initialCount - 1;\r\n        setInitialCount(newCount);\r\n      }\r\n    }\r\n    \r\n    // input handle change will update initial count and set error for max limit.\r\n    const handleChange = (event) => {\r\n      const value = Number(event.target.value);\r\n      const name = event.target.name;\r\n      if(name === \"initialCount\" && Number(value) && !(event.target.value > maxCount)){\r\n        setInitialCount(value);\r\n        setError(false);\r\n      } if (event.target.value > maxCount){\r\n        setError(true);\r\n      }\r\n    }\r\n\r\n    return(\r\n        <>\r\n          <div className=\"div-counter-wrapper\">\r\n              <div className=\"counter-container\">\r\n                  <button className=\"btn-count-right\" onClick={() => handleClick(\"subtract\")} disabled={initialCount <= 1}>\r\n                      <SubtractIcon />\r\n                  </button>\r\n                  <input className=\"input-count\" type=\"text\" value={initialCount} onChange={handleChange} name=\"initialCount\" placeholder=\"add initial counter value\"/>\r\n                  <button className=\"btn-count-left\" onClick={() => handleClick(\"add\")} disabled={initialCount >= maxCount}>\r\n                      <AddIcon />\r\n                  </button>\r\n              </div>\r\n              {initialCount >= maxCount || isError ? \r\n              <p className=\"error-msg\">\r\n                  Note: Initial count can not be greater than maximum count, you can increase maximum count.\r\n              </p> : null}\r\n          </div>\r\n        </> \r\n    );\r\n}\r\n\r\nexport default Counter;\r\n","import './App.css';\nimport Counter from \"./counter/Counter.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Counter />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}